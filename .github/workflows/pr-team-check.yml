name: PR Team Check (Untrusted)

on:
  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read

jobs:
  check-team-membership:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout PR code (untrusted)
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Get PR and commit authors
        id: get-authors
        run: |
          # Get PR author
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          echo "pr_author=$PR_AUTHOR" >> $GITHUB_OUTPUT
          echo "PR Author: $PR_AUTHOR"
          
          # Get all commit authors in this PR
          git fetch origin ${{ github.event.pull_request.base.ref }}
          COMMIT_AUTHORS=$(git log origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }} --format="%an" | sort -u | tr '\n' ',' | sed 's/,$//')
          echo "commit_authors=$COMMIT_AUTHORS" >> $GITHUB_OUTPUT
          echo "Commit Authors: $COMMIT_AUTHORS"
          
          # Get all commit author usernames (GitHub usernames)
          COMMIT_USERNAMES=""
          for sha in $(git log origin/${{ github.event.pull_request.base.ref }}..${{ github.event.pull_request.head.sha }} --format="%H"); do
            author_email=$(git show --format="%ae" --no-patch $sha)
            # Try to get GitHub username from commit
            if [[ "$author_email" == *"@users.noreply.github.com" ]]; then
              username=$(echo "$author_email" | cut -d'@' -f1 | sed 's/^[0-9]*+//')
              COMMIT_USERNAMES="$COMMIT_USERNAMES,$username"
            fi
          done
          COMMIT_USERNAMES=$(echo "$COMMIT_USERNAMES" | sed 's/^,//' | sed 's/,$//')
          echo "commit_usernames=$COMMIT_USERNAMES" >> $GITHUB_OUTPUT
          echo "Commit Usernames: $COMMIT_USERNAMES"

      - name: Check for workflow modifications
        id: check-workflow-changes
        run: |
          echo "ðŸ”’ Security Check: Validating PR does not modify workflow files"
          
          # Check if PR modifies any workflow files
          WORKFLOW_CHANGES=$(git diff --name-only origin/${{ github.event.pull_request.base.ref }}...${{ github.event.pull_request.head.sha }} | grep -E '^\.github/workflows/' || true)
          
          if [[ -n "$WORKFLOW_CHANGES" ]]; then
            echo "ðŸš¨ SECURITY ALERT: This PR modifies workflow files:"
            echo "$WORKFLOW_CHANGES"
            echo "workflow_modified=true" >> $GITHUB_OUTPUT
            echo "workflow_changes=$WORKFLOW_CHANGES" >> $GITHUB_OUTPUT
          else
            echo "âœ… No workflow files modified in this PR"
            echo "workflow_modified=false" >> $GITHUB_OUTPUT
            echo "workflow_changes=" >> $GITHUB_OUTPUT
          fi

      - name: Save PR information for privileged workflow
        run: |
          mkdir -p ./pr-info
          echo "${{ github.event.pull_request.number }}" > ./pr-info/pr_number
          echo "${{ steps.get-authors.outputs.pr_author }}" > ./pr-info/pr_author
          echo "${{ steps.get-authors.outputs.commit_authors }}" > ./pr-info/commit_authors
          echo "${{ steps.get-authors.outputs.commit_usernames }}" > ./pr-info/commit_usernames
          echo "${{ steps.check-workflow-changes.outputs.workflow_modified }}" > ./pr-info/workflow_modified
          echo "${{ steps.check-workflow-changes.outputs.workflow_changes }}" > ./pr-info/workflow_changes
          echo "${{ github.event.pull_request.head.sha }}" > ./pr-info/head_sha
          echo "${{ github.event.pull_request.base.sha }}" > ./pr-info/base_sha
          echo "${{ github.repository }}" > ./pr-info/repository

      - name: Upload PR information artifact
        uses: actions/upload-artifact@v4
        with:
          name: pr-info
          path: pr-info/
          retention-days: 1
